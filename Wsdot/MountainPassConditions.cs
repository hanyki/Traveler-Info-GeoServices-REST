//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wsdot.Traffic
{
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Wsdot.Traffic.IMountainPassConditions")]
    public interface IMountainPassConditions
    {
        
        // CODEGEN: Parameter 'GetMountainPassConditionsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMountainPassConditions/GetMountainPassConditions", ReplyAction="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Wsdot.Traffic.GetMountainPassConditionsResponse GetMountainPassConditions(Wsdot.Traffic.GetMountainPassConditionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMountainPassConditions/GetMountainPassConditions", ReplyAction="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsResponse")]
        System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionsResponse> GetMountainPassConditionsAsync(Wsdot.Traffic.GetMountainPassConditionsRequest request);
        
        // CODEGEN: Parameter 'GetMountainPassConditionsAsDataSetResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsAsDataSet", ReplyAction="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsAsDataSetResp" +
            "onse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Wsdot.Traffic.GetMountainPassConditionsAsDataSetResponse GetMountainPassConditionsAsDataSet(Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsAsDataSet", ReplyAction="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionsAsDataSetResp" +
            "onse")]
        System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionsAsDataSetResponse> GetMountainPassConditionsAsDataSetAsync(Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest request);
        
        // CODEGEN: Parameter 'GetMountainPassConditionResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMountainPassConditions/GetMountainPassCondition", ReplyAction="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        Wsdot.Traffic.GetMountainPassConditionResponse GetMountainPassCondition(Wsdot.Traffic.GetMountainPassConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMountainPassConditions/GetMountainPassCondition", ReplyAction="http://tempuri.org/IMountainPassConditions/GetMountainPassConditionResponse")]
        System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionResponse> GetMountainPassConditionAsync(Wsdot.Traffic.GetMountainPassConditionRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class PassCondition
    {
        
        private System.DateTime dateUpdatedField;
        
        private bool dateUpdatedFieldSpecified;
        
        private int elevationInFeetField;
        
        private bool elevationInFeetFieldSpecified;
        
        private double latitudeField;
        
        private bool latitudeFieldSpecified;
        
        private double longitudeField;
        
        private bool longitudeFieldSpecified;
        
        private int mountainPassIdField;
        
        private bool mountainPassIdFieldSpecified;
        
        private string mountainPassNameField;
        
        private TravelRestriction restrictionOneField;
        
        private TravelRestriction restrictionTwoField;
        
        private string roadConditionField;
        
        private System.Nullable<int> temperatureInFahrenheitField;
        
        private bool temperatureInFahrenheitFieldSpecified;
        
        private bool travelAdvisoryActiveField;
        
        private bool travelAdvisoryActiveFieldSpecified;
        
        private string weatherConditionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime DateUpdated
        {
            get
            {
                return this.dateUpdatedField;
            }
            set
            {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateUpdatedSpecified
        {
            get
            {
                return this.dateUpdatedFieldSpecified;
            }
            set
            {
                this.dateUpdatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ElevationInFeet
        {
            get
            {
                return this.elevationInFeetField;
            }
            set
            {
                this.elevationInFeetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElevationInFeetSpecified
        {
            get
            {
                return this.elevationInFeetFieldSpecified;
            }
            set
            {
                this.elevationInFeetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Latitude
        {
            get
            {
                return this.latitudeField;
            }
            set
            {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LatitudeSpecified
        {
            get
            {
                return this.latitudeFieldSpecified;
            }
            set
            {
                this.latitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Longitude
        {
            get
            {
                return this.longitudeField;
            }
            set
            {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LongitudeSpecified
        {
            get
            {
                return this.longitudeFieldSpecified;
            }
            set
            {
                this.longitudeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int MountainPassId
        {
            get
            {
                return this.mountainPassIdField;
            }
            set
            {
                this.mountainPassIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MountainPassIdSpecified
        {
            get
            {
                return this.mountainPassIdFieldSpecified;
            }
            set
            {
                this.mountainPassIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string MountainPassName
        {
            get
            {
                return this.mountainPassNameField;
            }
            set
            {
                this.mountainPassNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public TravelRestriction RestrictionOne
        {
            get
            {
                return this.restrictionOneField;
            }
            set
            {
                this.restrictionOneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public TravelRestriction RestrictionTwo
        {
            get
            {
                return this.restrictionTwoField;
            }
            set
            {
                this.restrictionTwoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public string RoadCondition
        {
            get
            {
                return this.roadConditionField;
            }
            set
            {
                this.roadConditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public System.Nullable<int> TemperatureInFahrenheit
        {
            get
            {
                return this.temperatureInFahrenheitField;
            }
            set
            {
                this.temperatureInFahrenheitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemperatureInFahrenheitSpecified
        {
            get
            {
                return this.temperatureInFahrenheitFieldSpecified;
            }
            set
            {
                this.temperatureInFahrenheitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool TravelAdvisoryActive
        {
            get
            {
                return this.travelAdvisoryActiveField;
            }
            set
            {
                this.travelAdvisoryActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TravelAdvisoryActiveSpecified
        {
            get
            {
                return this.travelAdvisoryActiveFieldSpecified;
            }
            set
            {
                this.travelAdvisoryActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public string WeatherCondition
        {
            get
            {
                return this.weatherConditionField;
            }
            set
            {
                this.weatherConditionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class TravelRestriction
    {
        
        private string restrictionTextField;
        
        private string travelDirectionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string RestrictionText
        {
            get
            {
                return this.restrictionTextField;
            }
            set
            {
                this.restrictionTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string TravelDirection
        {
            get
            {
                return this.travelDirectionField;
            }
            set
            {
                this.travelDirectionField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMountainPassConditions", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMountainPassConditionsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccessCode;
        
        public GetMountainPassConditionsRequest()
        {
        }
        
        public GetMountainPassConditionsRequest(string AccessCode)
        {
            this.AccessCode = AccessCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMountainPassConditionsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMountainPassConditionsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/")]
        public Wsdot.Traffic.PassCondition[] GetMountainPassConditionsResult;
        
        public GetMountainPassConditionsResponse()
        {
        }
        
        public GetMountainPassConditionsResponse(Wsdot.Traffic.PassCondition[] GetMountainPassConditionsResult)
        {
            this.GetMountainPassConditionsResult = GetMountainPassConditionsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMountainPassConditionsAsDataSet", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMountainPassConditionsAsDataSetRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccessCode;
        
        public GetMountainPassConditionsAsDataSetRequest()
        {
        }
        
        public GetMountainPassConditionsAsDataSetRequest(string AccessCode)
        {
            this.AccessCode = AccessCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMountainPassConditionsAsDataSetResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMountainPassConditionsAsDataSetResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetMountainPassConditionsAsDataSetResult;
        
        public GetMountainPassConditionsAsDataSetResponse()
        {
        }
        
        public GetMountainPassConditionsAsDataSetResponse(System.Data.DataSet GetMountainPassConditionsAsDataSetResult)
        {
            this.GetMountainPassConditionsAsDataSetResult = GetMountainPassConditionsAsDataSetResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMountainPassCondition", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMountainPassConditionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccessCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int PassConditionID;
        
        public GetMountainPassConditionRequest()
        {
        }
        
        public GetMountainPassConditionRequest(string AccessCode, int PassConditionID)
        {
            this.AccessCode = AccessCode;
            this.PassConditionID = PassConditionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMountainPassConditionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMountainPassConditionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Wsdot.Traffic.PassCondition GetMountainPassConditionResult;
        
        public GetMountainPassConditionResponse()
        {
        }
        
        public GetMountainPassConditionResponse(Wsdot.Traffic.PassCondition GetMountainPassConditionResult)
        {
            this.GetMountainPassConditionResult = GetMountainPassConditionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMountainPassConditionsChannel : Wsdot.Traffic.IMountainPassConditions, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MountainPassConditionsClient : System.ServiceModel.ClientBase<Wsdot.Traffic.IMountainPassConditions>, Wsdot.Traffic.IMountainPassConditions
    {
        
        public MountainPassConditionsClient()
        {
        }
        
        public MountainPassConditionsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public MountainPassConditionsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public MountainPassConditionsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public MountainPassConditionsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Wsdot.Traffic.GetMountainPassConditionsResponse Wsdot.Traffic.IMountainPassConditions.GetMountainPassConditions(Wsdot.Traffic.GetMountainPassConditionsRequest request)
        {
            return base.Channel.GetMountainPassConditions(request);
        }
        
        public Wsdot.Traffic.PassCondition[] GetMountainPassConditions(string AccessCode)
        {
            Wsdot.Traffic.GetMountainPassConditionsRequest inValue = new Wsdot.Traffic.GetMountainPassConditionsRequest();
            inValue.AccessCode = AccessCode;
            Wsdot.Traffic.GetMountainPassConditionsResponse retVal = ((Wsdot.Traffic.IMountainPassConditions)(this)).GetMountainPassConditions(inValue);
            return retVal.GetMountainPassConditionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionsResponse> Wsdot.Traffic.IMountainPassConditions.GetMountainPassConditionsAsync(Wsdot.Traffic.GetMountainPassConditionsRequest request)
        {
            return base.Channel.GetMountainPassConditionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionsResponse> GetMountainPassConditionsAsync(string AccessCode)
        {
            Wsdot.Traffic.GetMountainPassConditionsRequest inValue = new Wsdot.Traffic.GetMountainPassConditionsRequest();
            inValue.AccessCode = AccessCode;
            return ((Wsdot.Traffic.IMountainPassConditions)(this)).GetMountainPassConditionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Wsdot.Traffic.GetMountainPassConditionsAsDataSetResponse Wsdot.Traffic.IMountainPassConditions.GetMountainPassConditionsAsDataSet(Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest request)
        {
            return base.Channel.GetMountainPassConditionsAsDataSet(request);
        }
        
        public System.Data.DataSet GetMountainPassConditionsAsDataSet(string AccessCode)
        {
            Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest inValue = new Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest();
            inValue.AccessCode = AccessCode;
            Wsdot.Traffic.GetMountainPassConditionsAsDataSetResponse retVal = ((Wsdot.Traffic.IMountainPassConditions)(this)).GetMountainPassConditionsAsDataSet(inValue);
            return retVal.GetMountainPassConditionsAsDataSetResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionsAsDataSetResponse> Wsdot.Traffic.IMountainPassConditions.GetMountainPassConditionsAsDataSetAsync(Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest request)
        {
            return base.Channel.GetMountainPassConditionsAsDataSetAsync(request);
        }
        
        public System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionsAsDataSetResponse> GetMountainPassConditionsAsDataSetAsync(string AccessCode)
        {
            Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest inValue = new Wsdot.Traffic.GetMountainPassConditionsAsDataSetRequest();
            inValue.AccessCode = AccessCode;
            return ((Wsdot.Traffic.IMountainPassConditions)(this)).GetMountainPassConditionsAsDataSetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Wsdot.Traffic.GetMountainPassConditionResponse Wsdot.Traffic.IMountainPassConditions.GetMountainPassCondition(Wsdot.Traffic.GetMountainPassConditionRequest request)
        {
            return base.Channel.GetMountainPassCondition(request);
        }
        
        public Wsdot.Traffic.PassCondition GetMountainPassCondition(string AccessCode, int PassConditionID)
        {
            Wsdot.Traffic.GetMountainPassConditionRequest inValue = new Wsdot.Traffic.GetMountainPassConditionRequest();
            inValue.AccessCode = AccessCode;
            inValue.PassConditionID = PassConditionID;
            Wsdot.Traffic.GetMountainPassConditionResponse retVal = ((Wsdot.Traffic.IMountainPassConditions)(this)).GetMountainPassCondition(inValue);
            return retVal.GetMountainPassConditionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionResponse> Wsdot.Traffic.IMountainPassConditions.GetMountainPassConditionAsync(Wsdot.Traffic.GetMountainPassConditionRequest request)
        {
            return base.Channel.GetMountainPassConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Wsdot.Traffic.GetMountainPassConditionResponse> GetMountainPassConditionAsync(string AccessCode, int PassConditionID)
        {
            Wsdot.Traffic.GetMountainPassConditionRequest inValue = new Wsdot.Traffic.GetMountainPassConditionRequest();
            inValue.AccessCode = AccessCode;
            inValue.PassConditionID = PassConditionID;
            return ((Wsdot.Traffic.IMountainPassConditions)(this)).GetMountainPassConditionAsync(inValue);
        }
    }
}
